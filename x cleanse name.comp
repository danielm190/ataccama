<?xml version='1.0' encoding='UTF-8'?>
<purity-config version="11.1.0.ga-2017-05-04">
	<component-id>-1</component-id>
	<icon type="5">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</icon>
	<references/>
	<component-mappings>
		<propertyMappings/>
	</component-mappings>

<!-- (Add column for Names) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.flow.AlterFormat" disabled="false" id="Add column for Names">
		<properties>
			<addedColumns>
				<addedColumn name="out_first_name" type="STRING"/>
				<addedColumn name="out_middle_name" type="STRING"/>
				<addedColumn name="out_last_name" type="STRING"/>
				<addedColumn name="std_title" type="STRING"/>
				<addedColumn name="std_first_name" type="STRING"/>
				<addedColumn name="std_middle_name" type="STRING"/>
				<addedColumn name="std_last_name" type="STRING"/>
				<addedColumn name="pur_first_name_orig" type="STRING"/>
				<addedColumn name="pur_last_name_orig" type="STRING"/>
				<addedColumn name="pur_middle_name_orig" type="STRING"/>
				<addedColumn name="pat_full_name" type="STRING"/>
				<addedColumn name="pur_initial" type="STRING"/>
				<addedColumn expression="src_name" name="pur_full_name" type="STRING"/>
				<addedColumn name="sco_name" type="INTEGER"/>
				<addedColumn name="exp_name" type="STRING"/>
			</addedColumns>
			<removedColumns/>
		</properties>
		<visual-constraints layout="vertical" bounds="48,168,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="Add column for Names"/>
		<target endpoint="in" step="Remove titles"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Parse Names) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.clean.GuessNameSurnameAlgorithm" disabled="false" id="Parse Names">
		<properties lastName="std_last_name" multiWordDefinition="{MULTIWORD:wordSeparators=&quot;-&#39;`&quot;&quot;~&quot;}" interlacedWordDefinition="{INTERLACED_WORD}" lastNameOrig="pur_last_name_orig" proposalSelectionStrategy="DISTANCE_BASED" in="pur_full_name" patternName="pat_full_name" lastNameLookupFileName="../data/ext/lkp/last_names.lkp" wordDefinition="{WORD}" firstNameOrig="pur_first_name_orig" multiWordSeparators=" " firstName="std_first_name" firstNameLookupFileName="../data/ext/lkp/first_names.lkp" fullTrashScope="false" preserveIfDiffers="PRESERVE_NONE">
			<components>
				<component storeParsedInto="pur_initial" name="INITIAL" definition="{LETTER}">
					<scorer scoreColumn="sco_name" explanationColumn="exp_name">
						<scoringEntries>
							<scoringEntry explain="false" score="0" explainAs="PPV_MISMATCH" key="PPV_MISMATCH"/>
						</scoringEntries>
					</scorer>
				</component>
				<component storeParsedInto="pur_middle_name_orig" name="MIDDLE_NAME" definition="{WORD}" storeValidatedInto="std_middle_name">
					<scorer scoreColumn="sco_name" explanationColumn="exp_name">
						<scoringEntries>
							<scoringEntry explain="false" score="0" explainAs="PPV_MISMATCH" key="PPV_MISMATCH"/>
						</scoringEntries>
					</scorer>
					<verifier fileName="../data/ext/lkp/first_names.lkp" maxErrorRatio="1.0" maxErrors="0" wordSeparators=" "/>
				</component>
			</components>
			<hints/>
			<patternGroups>
				<patternGroup>
					<patterns>
						<pattern name="F! L!" definition="{FIRST_NAME!} {LAST_NAME!}" priority="0"/>
						<pattern name="F! M! L!" definition="{FIRST_NAME!} {MIDDLE_NAME!} {LAST_NAME!}" priority="0"/>
						<pattern name="L! F!" definition="{LAST_NAME!} {FIRST_NAME!}" priority="0"/>
						<pattern name="F! I.  L!" definition="{FIRST_NAME!} {INITIAL}. {LAST_NAME!}" priority="0"/>
						<pattern name="L! I. F!" definition="{LAST_NAME!} {INITIAL}. {FIRST_NAME!}" priority="0"/>
						<pattern name="I. I. L!" definition="{INITIAL}. {INITIAL}. {LAST_NAME}" priority="0"/>
						<pattern name="I. L!" definition="{INITIAL}. {LAST_NAME}" priority="0"/>
						<pattern name="I I L!" definition="{INITIAL} {INITIAL} {LAST_NAME}" priority="0"/>
					</patterns>
				</patternGroup>
				<patternGroup>
					<patterns>
						<pattern name="F L" definition="{FIRST_NAME} {LAST_NAME}" priority="0"/>
						<pattern name="F I  L" definition="{FIRST_NAME} {INITIAL} {LAST_NAME}" priority="0"/>
					</patterns>
				</patternGroup>
			</patternGroups>
			<scorer scoreColumn="sco_name" explanationColumn="exp_name">
				<scoringEntries>
					<scoringEntry explain="true" score="10000" explainAs="NAME_NULL" description="Missing name in input." key="NM_NULL"/>
					<scoringEntry explain="true" score="10000" explainAs="NAME_NO_PATTERN" description="No pattern found." key="NM_NO_PATTERN"/>
					<scoringEntry explain="true" score="10000" explainAs="NAME_UNKNOWN_WORD" description="One or more words found in the name was not in reference file." key="NM_PART_PATTERN"/>
					<scoringEntry explain="true" score="1000" explainAs="NAME_MORE_PATTERNS" description="More patterns satisfied." key="NM_MORE_PATTERNS"/>
					<scoringEntry explain="false" score="0" explainAs="NM_DIFFERENT" key="NM_DIFFERENT"/>
					<scoringEntry explain="false" score="0" explainAs="NM_HINT" key="NM_HINT"/>
					<scoringEntry explain="true" score="0" explainAs="NAME_INITIAL_FOUND" description="Initials were found in the name." key="NM_TRASH"/>
				</scoringEntries>
			</scorer>
			<tokenizerConfig whiteSpaceDefinition="[:white:]">
				<types>
					<tokenType tokenStartCharacters="[:letter:]" tokenCharacters="[:letter:]"/>
					<tokenType tokenStartCharacters="[:digit:]" tokenCharacters="[:digit:]"/>
				</types>
			</tokenizerConfig>
		</properties>
		<visual-constraints layout="vertical" bounds="48,312,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="Parse Names"/>
		<target endpoint="in" step="Prepare out values"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Prepare out values) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.expressions.ColumnAssigner" disabled="false" id="Prepare out values">
		<properties>
			<assignments>
				<assignment expression="nvl(std_first_name, pur_first_name_orig)" column="out_first_name">
					<scorer>
						<scoringEntries>
							<scoringEntry explain="false" score="0" explainAs="CA_CHANGED" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
				<assignment expression="iif(out_first_name is null, substr(pur_initial,2,1), nvl(std_middle_name, pur_middle_name_orig,pur_initial))" column="out_middle_name">
					<scorer>
						<scoringEntries>
							<scoringEntry explain="false" score="0" explainAs="CA_CHANGED" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
				<assignment column="out_last_name">
					<expression>nvl(std_last_name, pur_last_name_orig)
</expression>
					<scorer>
						<scoringEntries>
							<scoringEntry explain="false" score="0" explainAs="CA_CHANGED" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
				<assignment expression="iif(out_first_name is null, substr(pur_initial,0,1), out_first_name)" column="out_first_name">
					<scorer>
						<scoringEntries>
							<scoringEntry explain="false" score="0" explainAs="CA_CHANGED" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
			</assignments>
		</properties>
		<visual-constraints layout="vertical" bounds="48,384,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="Prepare out values"/>
		<target endpoint="in" step="Remove columns"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Remove columns) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.flow.AlterFormat" disabled="false" id="Remove columns">
		<properties>
			<addedColumns/>
			<removedColumns>
				<columnRef name="pur_first_name_orig"/>
				<columnRef name="pur_last_name_orig"/>
				<columnRef name="pur_middle_name_orig"/>
				<columnRef name="pur_initial"/>
				<columnRef name="pur_full_name"/>
			</removedColumns>
		</properties>
		<visual-constraints layout="vertical" bounds="48,456,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="Remove columns"/>
		<target endpoint="in" step="out"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Remove titles) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.clean.StripTitlesAlgorithm" disabled="false" id="Remove titles">
		<properties minWordCount="2" titlesOut="std_title" in="pur_full_name" ignoredSeparators="." preserveUnsupportedChars="true" titleLookupFileName="../data/ext/lkp/titles.lkp" separator="|" out="pur_full_name">
			<scorer scoreColumn="sco_name" explanationColumn="exp_name">
				<scoringEntries>
					<scoringEntry explain="true" score="1" explainAs="NAME_TITLE_REMOVED" key="ST_CHANGED"/>
				</scoringEntries>
			</scorer>
			<tokenizer whiteSpaceDefinition="[:white:]">
				<types>
					<tokenType tokenStartCharacters="[:letter:]" tokenCharacters="[:letter:]"/>
					<tokenType tokenStartCharacters="[:digit:]" tokenCharacters="[:digit:]"/>
				</types>
			</tokenizer>
		</properties>
		<visual-constraints layout="vertical" bounds="48,240,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="Remove titles"/>
		<target endpoint="in" step="Parse Names"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (in) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.common.usersteps.io.InputStep" disabled="false" id="in">
		<properties>
			<columns>
				<columnDef name="src_name" type="STRING"/>
			</columns>
			<shadowColumns/>
		</properties>
		<visual-constraints layout="vertical" bounds="48,96,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="in"/>
		<target endpoint="in" step="Add column for Names"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (out) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.common.usersteps.io.OutputStep" disabled="false" id="out">
		<properties>
			<requiredColumns/>
		</properties>
		<visual-constraints layout="vertical" bounds="48,528,-1,-1"/>
	</step>



<modelComment backgroundColor="128,255,128" borderColor="255,255,255" bounds="24,24,601,49" foregroundColor="40,0,0">Component Goals
The goal of this component is to cleanse names to be used in 09.01 Match and merge tutorial.</modelComment>



<modelComment backgroundColor="219,219,219" borderColor="255,255,255" bounds="240,168,468,198" foregroundColor="64,0,64">Titles (both academic and social) are removed to the std_title column.
Parsing is done by the Guess Name Surname step.

Column prefixes:
out_ ... used for creating Golden records
std_ ... correct values - found in the lookup files or validated by business rules
src_ ... original values - never changed
sco_... (integer) measure of attribute quality
     0 ... correct at input
     &lt;10000 ... corrected
     &gt;=10000 ... invalid or null, cannot be used for matching or output values</modelComment>

</purity-config>